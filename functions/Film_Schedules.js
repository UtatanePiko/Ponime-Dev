const bot = require('..')
const Discord = require('discord.js')
const dateFormat = require("dateformat")
const ms = require('ms')
const Util  = require('../functions/Util')
const { stringToDateFull, stringToDateTime} = require('../functions/Util')
const { noColor, botColorMessage } = require('../functions/Colours')
const {PUBLISH_CHANNEL_SELECTMENU, DECLINE_BUTTON, PLACE_CHANNEL_SELECT_MENU, PUBLISH_DECLINE_BUTTONS, FILM_OR_SERIAL_BUTTONS} = require('../functions/Buttons')
const { Embeds, crossText, noPerms, checkmarkText, noColorEmbed } = require('../functions/Embed') 

const cross = Util.findEmoji("cross4") 
const checkmark = Util.findEmoji("text_yes")
const coin = Util.findEmoji('CHPOKI_COIN')
module.exports = {
    async ONE_FILM_SCHEDULE(message, memberID){
        let declined = false, isActive = false, chan, isFilm = Boolean, title, year, genre, duration, series_amount, time, place, participation, image, roles
        let event_channels = bot.server.get(message.guild.id).event_channels
        let discordData

        const channelFilter = (m) => m.author.id === memberID

        let chanEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞ üìΩÔ∏è`).setColor("#2F3136")
        .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`)
        let chanMsg = await message.reply({
            embeds: [chanEmbed], 
            components: [PUBLISH_CHANNEL_SELECTMENU(message, event_channels), DECLINE_BUTTON()]
        }) 
        const chanCollector = chanMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
        chanCollector.on('collect', async i => {
            console.log(i.member.id, memberID)
            if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
            if(i.customId == "decline_button"){
                declined = true
                chanCollector.stop()
            } else {
                chan = i.values[0]
                chanCollector.stop()
            }
            chanMsg.edit({components: [PUBLISH_CHANNEL_SELECTMENU(message, event_channels, true), DECLINE_BUTTON(true)]})
            i.deferUpdate()
        })

        chanCollector.on('end', async collected => {
            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
            // if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)

            let filmOrSerialEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞ üìΩÔ∏è`).setColor("#2F3136")
            .setDescription(`–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è —Ñ–∏–ª—å–º–∞ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∞?`)

            let filmOrSerialMsg = await message.reply({
                embeds: [filmOrSerialEmbed], 
                components: [FILM_OR_SERIAL_BUTTONS(), DECLINE_BUTTON()]
            }) 

            const filmOrSeialCollector = filmOrSerialMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})

            filmOrSeialCollector.on('collect', async i => {
                if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                if(i.customId == 'decline_button'){
                    declined = true
                } else if(i.customId == 'film_button') {
                    isFilm = true
                } else {
                    isFilm = false
                }
                filmOrSeialCollector.stop()
                i.deferUpdate()
            })

            filmOrSeialCollector.on('end', async collected => {
                filmOrSerialMsg.edit({ components: [FILM_OR_SERIAL_BUTTONS(true), DECLINE_BUTTON(true)] })
                if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
            
                let titleEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                .setDescription(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                
                let titleMsg = await message.reply({
                    embeds: [titleEmbed], 
                    components: [DECLINE_BUTTON()]
                }) 
                const titleCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                const titleDeclineCollector = titleMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
    
                titleDeclineCollector.on('collect', async i => {
                    if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                    declined = true
                    titleCollector.stop()
                    titleDeclineCollector.stop()
                    i.deferUpdate()
                })
    
                titleCollector.on('collect', async(msg) => {
                    isActive = true
                    if(msg.author.id !== message.author.id) return
                    if(msg.author.bot) return
    
                    if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                    title = msg.content
                    msg.react(checkmark)
                    isActive = false
                    titleCollector.stop()
                })
    
                titleCollector.on('end', async collected => {
                    titleMsg.edit({components: [DECLINE_BUTTON(true)]})
                    if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                    if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                    if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
    
                    let yearEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                    .setDescription(`–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã—Ö–æ–¥–∞ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                    
                    let yearMsg = await message.reply({
                        embeds: [yearEmbed], 
                        components: [DECLINE_BUTTON()]
                    }) 
                    const yearCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                    const yearDeclineCollector = yearMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
    
                    yearDeclineCollector.on('collect', async i => {
                        if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                        declined = true
                        yearCollector.stop()
                        yearDeclineCollector.stop()
                        i.deferUpdate()
                    })
    
                    yearCollector.on('collect', async(msg) => {
                        isActive = true
                        if(msg.author.id !== message.author.id) return
                        if(msg.author.bot) return
    
                        let now = new Date
                        if(!isFinite(msg.content) || msg.content % 1 !== 0 || msg.content <= 0 || msg.content.includes("+")  || msg.content.includes(".") || msg.content > now.getFullYear()) return crossText(`–ì–æ–¥ –≤—ã—Ö–æ–¥–∞ —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º –∏ –Ω–µ –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞`, message)
                        if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                        year = msg.content
                        msg.react(checkmark)
                        isActive = false
                        yearCollector.stop()
                        yearDeclineCollector.stop()
                    })
    
                    yearCollector.on('end', async collected => {
                        yearMsg.edit({components: [DECLINE_BUTTON(true)]})
                        if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                        if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                        if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
    
                        let genreEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                        .setDescription(`–í–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä(-—ã) ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                        
                        let genreMsg = await message.reply({
                            embeds: [genreEmbed], 
                            components: [DECLINE_BUTTON()]
                        }) 
                        const genreCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                        const genreDeclineCollector = genreMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
    
                        genreDeclineCollector.on('collect', async i => {
                            if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                            declined = true
                            genreCollector.stop()
                            genreDeclineCollector.stop()
                            i.deferUpdate()
                        })
    
                        genreCollector.on('collect', async(msg) => {
                            isActive = true
                            if(msg.author.id !== message.author.id) return
                            if(msg.author.bot) return
    
                            if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                            genre = msg.content
                            msg.react(checkmark)
                            isActive = false
                            genreCollector.stop()
                            genreDeclineCollector.stop()
                        })
                    
                        genreCollector.on('end', async collected => {
                            genreMsg.edit({components: [DECLINE_BUTTON(true)]})
                            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                            if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
    
                                let seriesAmountEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                .setDescription(`–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π –≤ ${isFilm ? "—Ñ–∏–ª—å–º–µ" : "—Å–µ—Ä–∏–∞–ª–µ"}`)

                                let seriesAmountMsg = await message.reply({
                                    embeds: [seriesAmountEmbed],
                                    components: [DECLINE_BUTTON()]
                                }) 
                                const seriesAmountCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                const declineSeriesAmountCollector = seriesAmountMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
        

                                declineSeriesAmountCollector.on('collect', async i => {
                                    if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                    declined = true
                                    seriesAmountCollector.stop()
                                    declineSeriesAmountCollector.stop()
                                    i.deferUpdate()
                                })
                                
                                seriesAmountCollector.on('collect', async(msg) => {
                                    isActive = true
                                    if(msg.author.id !== message.author.id) return
                                    if(msg.author.bot) return
                        
                                    if(!isFinite(msg.content) || msg.content % 1 !== 0 || msg.content <= 0 || msg.content.includes("+")  || msg.content.includes(".")) return crossText(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º`, message)
                                    if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                    series_amount = msg.content
                                    msg.react(checkmark)
                                    isActive = false
                                    seriesAmountCollector.stop()
                                })

                                seriesAmountCollector.on('end', async collected => {
                                    seriesAmountMsg.edit({ components: [DECLINE_BUTTON(true)] })
                                    if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                    if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                    if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)

                                    let durationEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                    .setDescription(`–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ${series_amount > 1 ? "1 —Å–µ—Ä–∏–∏" : ""}\n–ü—Ä–∏–º–µ—Ä: \`${series_amount == 1 ? "1—á 35–º" : "45–º"}\``)
                                    
                                    let durationMsg = await message.reply({
                                        embeds: [durationEmbed], 
                                        components: [DECLINE_BUTTON()]
                                    }) 
                                    const durationCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                    const durationDeclineCollector = durationMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
            
                                    durationDeclineCollector.on('collect', async i => {
                                        if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                        declined = true
                                        durationCollector.stop()
                                        durationDeclineCollector.stop()
                                        i.deferUpdate()
                                    })
            
                                    durationCollector.on('collect', async(msg) => {
                                        isActive = true
                                        if(msg.author.id !== message.author.id) return
                                        if(msg.author.bot) return
            
                                        if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                        duration = msg.content
                                        msg.react(checkmark)
                                        isActive = false
                                        durationCollector.stop()
                                        durationDeclineCollector.stop()
                                    })

                                    durationCollector.on('end', async collected => {
                                        durationMsg.edit({components: [DECLINE_BUTTON(true)]})
                                        if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                        if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                        if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
        
                                        let timeEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                        .setDescription(`–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} –≤ —Ñ–æ—Ä–º–∞—Ç–µ \`–ß–ß:–ú–ú\` (–ù–∞–ø—Ä.: \`20:00\`)\n–ï—Å–ª–∏ ${isFilm ? "—Ñ–∏–ª—å–º" : "—Å–µ—Ä–∏–∞–ª"} –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –Ω–µ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤ –ø–æ–ª–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ \`–¥–¥.–º–º.–≥–≥–≥–≥ –ß–ß:–ú–ú\` (–ù–∞–ø—Ä.: \`13.06.2022 20:00\`)`)
                                        
                                        let timeMsg = await message.reply({
                                            embeds: [timeEmbed],
                                            components: [DECLINE_BUTTON()]
                                        }) 
                                        const timeCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                        const declineTimeCollector = timeMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                
                                        declineTimeCollector.on('collect', async i => {
                                            if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                            declined = true
                                            timeCollector.stop()
                                            declineTimeCollector.stop()
                                            i.deferUpdate()
                                        })
                                        
                                        timeCollector.on('collect', async(msg) => {
                                            isActive = true
                                            if(msg.author.id !== message.author.id) return
                                            if(msg.author.bot) return
                                
                                            let data
                                            if(msg.content.split(" ").length == 2){
                                                data = stringToDateFull(`${msg.content}`,"dd.mm.yyyy", "HH:MM")
                                            } else if (msg.content.split(" ").length == 1){
                                                data = stringToDateTime(`${msg.content}`,"HH:MM")
                                            } else {
                                                crossText(`–î–∞—Ç–∞ –∏–ª–∏ –≤—Ä–µ–º—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞`, msg)
                                            }
                                
                                            if(!Date.parse(data)) return crossText(`–î–∞—Ç–∞ –∏–ª–∏ –≤—Ä–µ–º—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞`, msg)
                                            if(Date.now() - (Date.parse(`${data}Z`) - 1000 * 60 * 60 * 3) > -60000 * 10) return crossText(`–ò–≤–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å—Å—è —Ä–∞–Ω–µ–µ, —á–µ–º –∑–∞ 10 –º–∏–Ω—É—Ç`, msg)
                                            discordData = new Date(Date.parse(`${data}Z`) - 1000 * 60 * 60 * 3)
                                            time = msg.content
                                            msg.react(checkmark)
                                            isActive = false
                                            timeCollector.stop()
                                        })
            
                                        timeCollector.on('end', async collected => {
                                            timeMsg.edit({components: [DECLINE_BUTTON(true)]})
                                            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                            if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
            
                                            let eventChannels = message.guild.channels.cache.filter(ch => ch.type == "GUILD_VOICE" &&
                                            (message.guild.channels.cache.get(ch.parentId).name.toLowerCase().includes("–∫–∏–Ω–æ–∑–∞–ª")))
                                            .sort(function (a, b) {
                                                return a.rawPosition - b.rawPosition;
                                            })
            
            
                                            let chanEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                            .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–π—Å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                                            let placeMsg = await message.reply({
                                                embeds: [chanEmbed], 
                                                components: [PLACE_CHANNEL_SELECT_MENU(message, eventChannels), DECLINE_BUTTON()]
                                            }) 
                                            const placeCollector = placeMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                            placeCollector.on('collect', async i => {
                                                console.log(i.member.id, memberID)
                                                if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                if(i.customId == "decline_button"){
                                                    declined = true
                                                    placeCollector.stop()
                                                } else {
                                                    place = i.values[0]
                                                    placeCollector.stop()
                                                }
                                                placeMsg.edit({components: [PLACE_CHANNEL_SELECT_MENU(message, eventChannels, true), DECLINE_BUTTON(true)]})
                                                i.deferUpdate()
                                            })
            
                                            placeCollector.on('end', async collected => {
                                                if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
            
                                                let participationEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                                .setDescription(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä ${series_amount > 1 ? "1 —Å–µ—Ä–∏–∏" : ""}`)
                                                
                                                let participationMsg = await message.reply({
                                                    embeds: [participationEmbed], 
                                                    components: [DECLINE_BUTTON()]
                                                }) 
                                                const participationCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                const participationDeclineCollector = participationMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                            
                                                participationDeclineCollector.on('collect', async i => {
                                                    if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                    declined = true
                                                    participationCollector.stop()
                                                    participationDeclineCollector.stop()
                                                    i.deferUpdate()
                                                })
                            
                                                participationCollector.on('collect', async(msg) => {
                                                    isActive = true
                                                    if(msg.author.id !== message.author.id) return
                                                    if(msg.author.bot) return
                            
                                                    if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                    participation = msg.content
                                                    msg.react(checkmark)
                                                    isActive = false
                                                    participationCollector.stop()
                                                    participationDeclineCollector.stop()
                                                })
            
                                                participationCollector.on('end', async collected => {
                                                    participationMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                    if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                    if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                    if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
                
                                                    let imageEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                                    .setDescription(`–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±–ª–æ–∂–∫—É ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                                                    let imageMsg = await message.reply({embeds: [imageEmbed], components: [DECLINE_BUTTON()]}) 
                                                    const imageCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                    const skipDeclineTimeCollector = imageMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                                    declineTimeCollector.stop()
            
                                                    skipDeclineTimeCollector.on('collect', async i => {
                                                        if (i.member.id != message.member.id) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                        if(i.customId == "decline_button"){
                                                            declined = true
                                                            imageCollector.stop()
                                                            skipDeclineTimeCollector.stop()
                                                        }
                                                        i.deferUpdate()
                                                    })
            
                                                    imageCollector.on('collect', async msg => {
                                                        isActive = true
                                                        if(msg.author.id !== message.author.id) return
                                                        if(msg.author.bot) return
                            
                                                        if(msg.attachments.size == 0) {
                                                            crossText(`–ù–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏`, msg)
                                                        } else {
                                                            let attach = await msg.attachments.first().attachment
                                                            await bot.guilds.cache.get("914124553960194059").channels.cache.get('985644709152182312').send({
                                                                files: [attach]
                                                            }).then(async msg2 => {
                                                                image = msg2.attachments.first().attachment
                                                            })
                                                            msg.react(checkmark)
                                                            isActive = false
                                                            imageCollector.stop()
                                                        }
                                                    })
            
                                                    imageCollector.on('end', async collected => {
                                                        imageMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                        if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                        if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                        if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
                    
                                                        let rolesEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                                        .setDescription(`–í–≤–µ–¥–∏—Ç–µ —Å–∞–º–æ–µ –≤–µ—Ä—Ö–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —ç–º–±–µ–¥–æ–º\n–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –∏–≤–µ–Ω—Ç–µ`)
                                                        let rolesMsg = await message.reply({embeds: [rolesEmbed], components: [DECLINE_BUTTON()]}) 
                                                        const rolesCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                        const declineRolesCollector = rolesMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                    
                                                        declineRolesCollector.on('collect', async i => {
                                                            if (i.member.id != message.member.id) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                            declined = true
                                                            rolesCollector.stop()
                                                            declineRolesCollector.stop()
                                                            i.deferUpdate()
                                                        })
                                                        
                                                        rolesCollector.on('collect', async(msg) => {
                                                            isActive = true
                                                            if(msg.author.id !== message.author.id) return
                                                            if(msg.author.bot) return
                    
                                                            if(msg.content.includes('@everyone') || msg.content.includes('@here')) return crossText(`–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @everyone –∏ @here –≤ –≤–µ—Ä—Ö–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏`, msg)
                                                            roles = msg.content
                                                            if(!roles) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                            msg.react(checkmark)
                                                            isActive = false
                                                            rolesCollector.stop()
                                                        })
            
                                                        rolesCollector.on('end', async collected => {
                                                            rolesMsg.edit({components:[DECLINE_BUTTON(true)]})
                                                            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                            if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
                    
                                                            let embedCreate = (preview) => {
                                                                let embed = new Discord.MessageEmbed().setColor(noColor())
                                                                .setTitle(title)
                                                                .setDescription(`**–ñ–∞–Ω—Ä:** ${genre}\n**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å${series_amount > 1 ? ` –æ–¥–Ω–æ–π —Å–µ—Ä–∏–∏`: ":"}** ${duration}${series_amount > 1 ? `\n**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π:** ${series_amount}` : ""}\n**–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:** ${year} –≥–æ–¥\n**–ú–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏ –∏ –Ω–∞—á–∞–ª–æ:** <#${place}> ${time} –ø–æ –ú–°–ö\n**–í–µ–¥—É—â–∏–π:** ${message.member}\n**–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä${series_amount > 1 ? ` –æ–¥–Ω–æ–π —Å–µ—Ä–∏–∏:` : ":"}** ${participation} ${coin}`)
                                                                .setImage(image)
                                                                if(preview) embed.setFooter({text:`–≠—Ç–æ –ø—Ä–µ–≤—å—é –∏–≤–µ–Ω—Ç–∞`})
                                                                return embed
                                                            }
            
                                                            let previewMsg = await message.channel.send({
                                                                content: roles, 
                                                                embeds: [embedCreate(true)], 
                                                                components: [PUBLISH_DECLINE_BUTTONS()]
                                                            })
                                                            const declinePublishCollector = previewMsg.createMessageComponentCollector({channelFilter, time: 300000, errors: ['time']})
            
                                                            declinePublishCollector.on('collect', async i => {
                                                            if(i.member.id != message.member.id) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                            if(i.customId == 'decline_button'){
                                                                declinePublishCollector.stop()
                                                                previewMsg.edit({
                                                                    components: [PUBLISH_DECLINE_BUTTONS(true)]
                                                                })
                                                                crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                i.deferUpdate()
                                                            } else if(i.customId == "publish_button") {
                                                                if(title.replace(/\*/g, "").replace(/\`/g, "").replace(/\_/g, "").length > 100) return await i.reply({content: `–¢–∞–π—Ç–ª –∏–≤–µ–Ω—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 100 —Å–∏–º–≤–æ–ª–æ–≤\n–ï—Å–ª–∏ –≤–∞–º –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Å–∏–º–≤–æ–ª–æ–≤ –º–µ–Ω—å—à–µ, —Ç–æ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —ç–º–æ–¥–∑–∏ –∑–∞–Ω–∏–º–∞—é—Ç 33 —Å–∏–º–≤–æ–ª–∞ –∫–∞–∂–¥—ã–π –∏–∑-–∑–∞ –∏—Ö —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ id –∏ –Ω–∞–∑–≤–∞–Ω–∏—è`, ephemeral: true})
            
                                                                let findChan = message.guild.channels.cache.get(chan)
                                                                findChan.send({content: roles, embeds: [embedCreate(false)]})
                                                                return i.reply({content: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!"})
                                                                //i.deferUpdate()
                                                            }
                                                        })
                                                    })
                                                })
                                            })
                                        })
                                    })
                                })
                            })
                        })
                    })
                })
            })
        })
    },

    async TWO_FILMS_SCHEDULE(message, memberID){
        let declined = false, isActive = false, chan, isFilm = Boolean, title, year, genre, duration, series_amount, time, place, participation, image, roles
        let event_channels = bot.server.get(message.guild.id).event_channels
        let discordData

        const channelFilter = (m) => m.author.id === memberID

        let chanEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞ üìΩÔ∏è`).setColor("#2F3136")
        .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`)
        let chanMsg = await message.reply({
            embeds: [chanEmbed], 
            components: [PUBLISH_CHANNEL_SELECTMENU(message, event_channels), DECLINE_BUTTON()]
        }) 
        const chanCollector = chanMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
        chanCollector.on('collect', async i => {
            console.log(i.member.id, memberID)
            if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
            if(i.customId == "decline_button"){
                declined = true
                chanCollector.stop()
            } else {
                chan = i.values[0]
                chanCollector.stop()
            }
            chanMsg.edit({components: [PUBLISH_CHANNEL_SELECTMENU(message, event_channels, true), DECLINE_BUTTON(true)]})
            i.deferUpdate()
        })

        chanCollector.on('end', async collected => {
            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
            // if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)

            let filmOrSerialEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞ üìΩÔ∏è`).setColor("#2F3136")
            .setDescription(`–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è —Ñ–∏–ª—å–º–∞ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∞?`)

            let filmOrSerialMsg = await message.reply({
                embeds: [filmOrSerialEmbed], 
                components: [FILM_OR_SERIAL_BUTTONS(), DECLINE_BUTTON()]
            }) 

            const filmOrSeialCollector = filmOrSerialMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})

            filmOrSeialCollector.on('collect', async i => {
                if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                if(i.customId == 'decline_button'){
                    declined = true
                } else if(i.customId == 'film_button') {
                    isFilm = true
                } else {
                    isFilm = false
                }
                filmOrSeialCollector.stop()
                i.deferUpdate()
            })

            filmOrSeialCollector.on('end', async collected => {
                filmOrSerialMsg.edit({ components: [FILM_OR_SERIAL_BUTTONS(true), DECLINE_BUTTON(true)] })
                if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
            
                let titleEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                .setDescription(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                
                let titleMsg = await message.reply({
                    embeds: [titleEmbed], 
                    components: [DECLINE_BUTTON()]
                }) 
                const titleCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                const titleDeclineCollector = titleMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
    
                titleDeclineCollector.on('collect', async i => {
                    if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                    declined = true
                    titleCollector.stop()
                    titleDeclineCollector.stop()
                    i.deferUpdate()
                })
    
                titleCollector.on('collect', async(msg) => {
                    isActive = true
                    if(msg.author.id !== message.author.id) return
                    if(msg.author.bot) return
    
                    title = msg.content
                    if(!title) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                    msg.react(checkmark)
                    isActive = false
                    titleCollector.stop()
                })
    
                titleCollector.on('end', async collected => {
                    titleMsg.edit({components: [DECLINE_BUTTON(true)]})
                    if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                    if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                    if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
    
                    let yearEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                    .setDescription(`–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã—Ö–æ–¥–∞ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                    
                    let yearMsg = await message.reply({
                        embeds: [yearEmbed], 
                        components: [DECLINE_BUTTON()]
                    }) 
                    const yearCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                    const yearDeclineCollector = yearMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
    
                    yearDeclineCollector.on('collect', async i => {
                        if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                        declined = true
                        yearCollector.stop()
                        yearDeclineCollector.stop()
                        i.deferUpdate()
                    })
    
                    yearCollector.on('collect', async(msg) => {
                        isActive = true
                        if(msg.author.id !== message.author.id) return
                        if(msg.author.bot) return
    
                        let now = new Date
                        if(!isFinite(msg.content) || msg.content % 1 !== 0 || msg.content <= 0 || msg.content.includes("+")  || msg.content.includes(".") || msg.content > now.getFullYear()) return crossText(`–ì–æ–¥ –≤—ã—Ö–æ–¥–∞ —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º –∏ –Ω–µ –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞`, message)
                        if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                        year = msg.content
                        msg.react(checkmark)
                        isActive = false
                        yearCollector.stop()
                        yearDeclineCollector.stop()
                    })
    
                    yearCollector.on('end', async collected => {
                        yearMsg.edit({components: [DECLINE_BUTTON(true)]})
                        if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                        if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                        if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
    
                        let genreEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                        .setDescription(`–í–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä(-—ã) ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                        
                        let genreMsg = await message.reply({
                            embeds: [genreEmbed], 
                            components: [DECLINE_BUTTON()]
                        }) 
                        const genreCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                        const genreDeclineCollector = genreMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
    
                        genreDeclineCollector.on('collect', async i => {
                            if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                            declined = true
                            genreCollector.stop()
                            genreDeclineCollector.stop()
                            i.deferUpdate()
                        })
    
                        genreCollector.on('collect', async(msg) => {
                            isActive = true
                            if(msg.author.id !== message.author.id) return
                            if(msg.author.bot) return
    
                            if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                            genre = msg.content
                            msg.react(checkmark)
                            isActive = false
                            genreCollector.stop()
                            genreDeclineCollector.stop()
                        })
                    
                        genreCollector.on('end', async collected => {
                            genreMsg.edit({components: [DECLINE_BUTTON(true)]})
                            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                            if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
    
                            let seriesAmountEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                            .setDescription(`–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π –≤ ${isFilm ? "—Ñ–∏–ª—å–º–µ" : "—Å–µ—Ä–∏–∞–ª–µ"}`)

                            let seriesAmountMsg = await message.reply({
                                embeds: [seriesAmountEmbed],
                                components: [DECLINE_BUTTON()]
                            }) 
                            const seriesAmountCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                            const declineSeriesAmountCollector = seriesAmountMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
    

                            declineSeriesAmountCollector.on('collect', async i => {
                                if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                declined = true
                                seriesAmountCollector.stop()
                                declineSeriesAmountCollector.stop()
                                i.deferUpdate()
                            })
                            
                            seriesAmountCollector.on('collect', async(msg) => {
                                isActive = true
                                if(msg.author.id !== message.author.id) return
                                if(msg.author.bot) return
                    
                                if(!isFinite(msg.content) || msg.content % 1 !== 0 || msg.content <= 0 || msg.content.includes("+")  || msg.content.includes(".")) return crossText(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º`, message)
                                if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                series_amount = msg.content
                                msg.react(checkmark)
                                isActive = false
                                seriesAmountCollector.stop()
                            })

                            seriesAmountCollector.on('end', async collected => {
                                seriesAmountMsg.edit({ components: [DECLINE_BUTTON(true)] })
                                if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)

                                let durationEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                .setDescription(`–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ${series_amount > 1 ? "1 —Å–µ—Ä–∏–∏" : ""}\n–ü—Ä–∏–º–µ—Ä: \`${series_amount == 1 ? "1—á 35–º" : "45–º"}\``)
                                
                                let durationMsg = await message.reply({
                                    embeds: [durationEmbed], 
                                    components: [DECLINE_BUTTON()]
                                }) 
                                const durationCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                const durationDeclineCollector = durationMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
        
                                durationDeclineCollector.on('collect', async i => {
                                    if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                    declined = true
                                    durationCollector.stop()
                                    durationDeclineCollector.stop()
                                    i.deferUpdate()
                                })
        
                                durationCollector.on('collect', async(msg) => {
                                    isActive = true
                                    if(msg.author.id !== message.author.id) return
                                    if(msg.author.bot) return
        
                                    if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                    duration = msg.content
                                    msg.react(checkmark)
                                    isActive = false
                                    durationCollector.stop()
                                    durationDeclineCollector.stop()
                                })

                                durationCollector.on('end', async collected => {
                                    durationMsg.edit({components: [DECLINE_BUTTON(true)]})
                                    if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                    if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                    if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
            
                                    let imageEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                    .setDescription(`–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±–ª–æ–∂–∫—É ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                                    let imageMsg = await message.reply({embeds: [imageEmbed], components: [DECLINE_BUTTON()]}) 
                                    const imageCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                    const skipDeclineTimeCollector = imageMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})

                                    skipDeclineTimeCollector.on('collect', async i => {
                                        if (i.member.id != message.member.id) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                        if(i.customId == "decline_button"){
                                            declined = true
                                            imageCollector.stop()
                                            skipDeclineTimeCollector.stop()
                                        }
                                        i.deferUpdate()
                                    })

                                    imageCollector.on('collect', async msg => {
                                        isActive = true
                                        if(msg.author.id !== message.author.id) return
                                        if(msg.author.bot) return
            
                                        if(msg.attachments.size == 0) {
                                            crossText(`–ù–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏`, msg)
                                        } else {
                                            let attach = await msg.attachments.first().attachment
                                            await bot.guilds.cache.get("914124553960194059").channels.cache.get('985644709152182312').send({
                                                files: [attach]
                                            }).then(async msg2 => {
                                                image = msg2.attachments.first().attachment
                                            })
                                            msg.react(checkmark)
                                            isActive = false
                                            imageCollector.stop()
                                        }
                                    })

                                    imageCollector.on('end', async collected => {
                                        imageMsg.edit({components: [DECLINE_BUTTON(true)]})
                                        if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                        if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                        if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)

                                        let participationEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} üìΩÔ∏è`).setColor("#2F3136")
                                        .setDescription(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä ${series_amount > 1 ? "1 —Å–µ—Ä–∏–∏" : ""}`)
                                        
                                        let participationMsg = await message.reply({
                                            embeds: [participationEmbed], 
                                            components: [DECLINE_BUTTON()]
                                        }) 
                                        const participationCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                        const participationDeclineCollector = participationMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                    
                                        participationDeclineCollector.on('collect', async i => {
                                            if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                            declined = true
                                            participationCollector.stop()
                                            participationDeclineCollector.stop()
                                            i.deferUpdate()
                                        })
                    
                                        participationCollector.on('collect', async(msg) => {
                                            isActive = true
                                            if(msg.author.id !== message.author.id) return
                                            if(msg.author.bot) return
                    
                                            if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                            participation = msg.content
                                            msg.react(checkmark)
                                            isActive = false
                                            participationCollector.stop()
                                            participationDeclineCollector.stop()
                                        })
    
                                        participationCollector.on('end', async collected => {
                                            participationMsg.edit({components: [DECLINE_BUTTON(true)]})
                                            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                            if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)

                                            let isFilm2 = Boolean, title2, year2, genre2, duration2, series_amount2, image2, participation2

                                            let filmOrSerialEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞ 2üìΩÔ∏è`).setColor("#2F3136")
                                            .setDescription(`–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è —Ñ–∏–ª—å–º–∞ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∞?`)
    
                                            let filmOrSerialMsg = await message.reply({
                                            embeds: [filmOrSerialEmbed], 
                                            components: [FILM_OR_SERIAL_BUTTONS(), DECLINE_BUTTON()]
                                            }) 
                                            
                                            const filmOrSeialCollector = filmOrSerialMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                            
                                            filmOrSeialCollector.on('collect', async i => {
                                                if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                if(i.customId == 'decline_button'){
                                                    declined = true
                                                } else if(i.customId == 'film_button') {
                                                    isFilm2 = true
                                                } else {
                                                    isFilm2 = false
                                                }
                                                filmOrSeialCollector.stop()
                                                i.deferUpdate()
                                            })
                                            
                                            filmOrSeialCollector.on('end', async collected => {
                                            filmOrSerialMsg.edit({ components: [FILM_OR_SERIAL_BUTTONS(true), DECLINE_BUTTON(true)] })
                                            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                            
                                            let titleEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} 2 üìΩÔ∏è`).setColor("#2F3136")
                                            .setDescription(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                                            
                                            let titleMsg = await message.reply({
                                                embeds: [titleEmbed], 
                                                components: [DECLINE_BUTTON()]
                                            }) 
                                            const titleCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                            const titleDeclineCollector = titleMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                            
                                            titleDeclineCollector.on('collect', async i => {
                                                if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                declined = true
                                                titleCollector.stop()
                                                titleDeclineCollector.stop()
                                                i.deferUpdate()
                                            })
                                            
                                            titleCollector.on('collect', async(msg) => {
                                                isActive = true
                                                if(msg.author.id !== message.author.id) return
                                                if(msg.author.bot) return
                                            
                                                title2 = msg.content
                                                if(!title2) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                msg.react(checkmark)
                                                isActive = false
                                                titleCollector.stop()
                                            })
                                            
                                            titleCollector.on('end', async collected => {
                                                titleMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
                                            
                                                let yearEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} 2 üìΩÔ∏è`).setColor("#2F3136")
                                                .setDescription(`–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã—Ö–æ–¥–∞ ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                                                
                                                let yearMsg = await message.reply({
                                                    embeds: [yearEmbed], 
                                                    components: [DECLINE_BUTTON()]
                                                }) 
                                                const yearCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                const yearDeclineCollector = yearMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                            
                                                yearDeclineCollector.on('collect', async i => {
                                                    if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                    declined = true
                                                    yearCollector.stop()
                                                    yearDeclineCollector.stop()
                                                    i.deferUpdate()
                                                })
                                            
                                                yearCollector.on('collect', async(msg) => {
                                                    isActive = true
                                                    if(msg.author.id !== message.author.id) return
                                                    if(msg.author.bot) return
                                            
                                                    let now = new Date
                                                    if(!isFinite(msg.content) || msg.content % 1 !== 0 || msg.content <= 0 || msg.content.includes("+")  || msg.content.includes(".") || msg.content > now.getFullYear()) return crossText(`–ì–æ–¥ –≤—ã—Ö–æ–¥–∞ —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º –∏ –Ω–µ –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞`, message)
                                                    if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                    year2 = msg.content
                                                    msg.react(checkmark)
                                                    isActive = false
                                                    yearCollector.stop()
                                                    yearDeclineCollector.stop()
                                                })
                                            
                                                yearCollector.on('end', async collected => {
                                                    yearMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                    if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                    if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                    if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
                                            
                                                    let genreEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} 2 üìΩÔ∏è`).setColor("#2F3136")
                                                    .setDescription(`–í–≤–µ–¥–∏—Ç–µ –∂–∞–Ω—Ä(-—ã) ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                                                    
                                                    let genreMsg = await message.reply({
                                                        embeds: [genreEmbed], 
                                                        components: [DECLINE_BUTTON()]
                                                    }) 
                                                    const genreCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                    const genreDeclineCollector = genreMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                            
                                                    genreDeclineCollector.on('collect', async i => {
                                                        if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                        declined = true
                                                        genreCollector.stop()
                                                        genreDeclineCollector.stop()
                                                        i.deferUpdate()
                                                    })
                                            
                                                    genreCollector.on('collect', async(msg) => {
                                                        isActive = true
                                                        if(msg.author.id !== message.author.id) return
                                                        if(msg.author.bot) return
                                            
                                                        if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                        genre2 = msg.content
                                                        msg.react(checkmark)
                                                        isActive = false
                                                        genreCollector.stop()
                                                        genreDeclineCollector.stop()
                                                    })
                                                
                                                    genreCollector.on('end', async collected => {
                                                        genreMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                        if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                        if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                        if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
                                            
                                                            let seriesAmountEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} 2 üìΩÔ∏è`).setColor("#2F3136")
                                                            .setDescription(`–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π –≤ ${isFilm2 ? "—Ñ–∏–ª—å–º–µ" : "—Å–µ—Ä–∏–∞–ª–µ"}`)
                                            
                                                            let seriesAmountMsg = await message.reply({
                                                                embeds: [seriesAmountEmbed],
                                                                components: [DECLINE_BUTTON()]
                                                            }) 
                                                            const seriesAmountCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                            const declineSeriesAmountCollector = seriesAmountMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                            
                                            
                                                            declineSeriesAmountCollector.on('collect', async i => {
                                                                if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                                declined = true
                                                                seriesAmountCollector.stop()
                                                                declineSeriesAmountCollector.stop()
                                                                i.deferUpdate()
                                                            })
                                                            
                                                            seriesAmountCollector.on('collect', async(msg) => {
                                                                isActive = true
                                                                if(msg.author.id !== message.author.id) return
                                                                if(msg.author.bot) return
                                                    
                                                                if(!isFinite(msg.content) || msg.content % 1 !== 0 || msg.content <= 0 || msg.content.includes("+")  || msg.content.includes(".")) return crossText(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º`, message)
                                                                if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                                series_amount2 = msg.content
                                                                msg.react(checkmark)
                                                                isActive = false
                                                                seriesAmountCollector.stop()
                                                            })
                                            
                                                            seriesAmountCollector.on('end', async collected => {
                                                                seriesAmountMsg.edit({ components: [DECLINE_BUTTON(true)] })
                                                                if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                                if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
                                            
                                                                let durationEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} 2 üìΩÔ∏è`).setColor("#2F3136")
                                                                .setDescription(`–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ${series_amount2 > 1 ? "1 —Å–µ—Ä–∏–∏" : ""}\n–ü—Ä–∏–º–µ—Ä: \`${series_amount2 == 1 ? "1—á 35–º" : "45–º"}\``)
                                                                
                                                                let durationMsg = await message.reply({
                                                                    embeds: [durationEmbed], 
                                                                    components: [DECLINE_BUTTON()]
                                                                }) 
                                                                const durationCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                                const durationDeclineCollector = durationMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                            
                                                                durationDeclineCollector.on('collect', async i => {
                                                                    if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                                    declined = true
                                                                    durationCollector.stop()
                                                                    durationDeclineCollector.stop()
                                                                    i.deferUpdate()
                                                                })
                                            
                                                                durationCollector.on('collect', async(msg) => {
                                                                    isActive = true
                                                                    if(msg.author.id !== message.author.id) return
                                                                    if(msg.author.bot) return
                                            
                                                                    if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                                    duration2 = msg.content
                                                                    msg.react(checkmark)
                                                                    isActive = false
                                                                    durationCollector.stop()
                                                                    durationDeclineCollector.stop()
                                                                })
                                            
                                                                durationCollector.on('end', async collected => {
                                                                    durationMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                                    if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                    if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                                    if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
                                            
                                            
                                                                    let imageEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} 2 üìΩÔ∏è`).setColor("#2F3136")
                                                                    .setDescription(`–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±–ª–æ–∂–∫—É ${isFilm2 ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"}`)
                                                                    let imageMsg = await message.reply({embeds: [imageEmbed], components: [DECLINE_BUTTON()]}) 
                                                                    const imageCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                                    const skipDeclineTimeCollector = imageMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                
                                                                    skipDeclineTimeCollector.on('collect', async i => {
                                                                        if (i.member.id != message.member.id) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                                        if(i.customId == "decline_button"){
                                                                            declined = true
                                                                            imageCollector.stop()
                                                                            skipDeclineTimeCollector.stop()
                                                                        }
                                                                        i.deferUpdate()
                                                                    })
                                
                                                                    imageCollector.on('collect', async msg => {
                                                                        isActive = true
                                                                        if(msg.author.id !== message.author.id) return
                                                                        if(msg.author.bot) return
                                            
                                                                        if(msg.attachments.size == 0) {
                                                                            crossText(`–ù–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏`, msg)
                                                                        } else {
                                                                            let attach = await msg.attachments.first().attachment
                                                                            await bot.guilds.cache.get("914124553960194059").channels.cache.get('985644709152182312').send({
                                                                                files: [attach]
                                                                            }).then(async msg2 => {
                                                                                image2 = msg2.attachments.first().attachment
                                                                            })
                                                                            msg.react(checkmark)
                                                                            isActive = false
                                                                            imageCollector.stop()
                                                                        }
                                                                    })
                                
                                                                    imageCollector.on('end', async collected => {
                                                                        imageMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                                        if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                        if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                                        if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
    
                                                                        let participationEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ ${isFilm ? "—Ñ–∏–ª—å–º–∞" : "—Å–µ—Ä–∏–∞–ª–∞"} 2 üìΩÔ∏è`).setColor("#2F3136")
                                                                        .setDescription(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä ${series_amount2 > 1 ? "1 —Å–µ—Ä–∏–∏" : ""}`)
                                                                        
                                                                        let participationMsg = await message.reply({
                                                                            embeds: [participationEmbed], 
                                                                            components: [DECLINE_BUTTON()]
                                                                        }) 
                                                                        const participationCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                                        const participationDeclineCollector = participationMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                                    
                                                                        participationDeclineCollector.on('collect', async i => {
                                                                            if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                                            declined = true
                                                                            participationCollector.stop()
                                                                            participationDeclineCollector.stop()
                                                                            i.deferUpdate()
                                                                        })
                                                    
                                                                        participationCollector.on('collect', async(msg) => {
                                                                            isActive = true
                                                                            if(msg.author.id !== message.author.id) return
                                                                            if(msg.author.bot) return
                                                    
                                                                            if(!msg.content) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                                            participation2 = msg.content
                                                                            msg.react(checkmark)
                                                                            isActive = false
                                                                            participationCollector.stop()
                                                                            participationDeclineCollector.stop()
                                                                        })
                                    
                                                                        participationCollector.on('end', async collected => {
                                                                            participationMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                                            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                                            if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)

                                                                            let timeEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è üìΩÔ∏è`).setColor("#2F3136")
                                                                            .setDescription(`–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ \`–ß–ß:–ú–ú\` (–ù–∞–ø—Ä.: \`20:00\`)\n–ï—Å–ª–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –Ω–µ —Å–µ–≥–æ–¥–Ω—è, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤ –ø–æ–ª–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ \`–¥–¥.–º–º.–≥–≥–≥–≥ –ß–ß:–ú–ú\` (–ù–∞–ø—Ä.: \`13.06.2022 20:00\`)`)
                                                                            
                                                                            let timeMsg = await message.reply({
                                                                                embeds: [timeEmbed],
                                                                                components: [DECLINE_BUTTON()]
                                                                            }) 
                                                                            const timeCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                                            const declineTimeCollector = timeMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                                    
                                                                            declineTimeCollector.on('collect', async i => {
                                                                                if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                                                declined = true
                                                                                timeCollector.stop()
                                                                                declineTimeCollector.stop()
                                                                                i.deferUpdate()
                                                                            })
                                                                            
                                                                            timeCollector.on('collect', async(msg) => {
                                                                                isActive = true
                                                                                if(msg.author.id !== message.author.id) return
                                                                                if(msg.author.bot) return
                                                                    
                                                                                let data
                                                                                if(msg.content.split(" ").length == 2){
                                                                                    data = stringToDateFull(`${msg.content}`,"dd.mm.yyyy", "HH:MM")
                                                                                } else if (msg.content.split(" ").length == 1){
                                                                                    data = stringToDateTime(`${msg.content}`,"HH:MM")
                                                                                } else {
                                                                                    crossText(`–î–∞—Ç–∞ –∏–ª–∏ –≤—Ä–µ–º—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞`, msg)
                                                                                }
                                                                    
                                                                                if(!Date.parse(data)) return crossText(`–î–∞—Ç–∞ –∏–ª–∏ –≤—Ä–µ–º—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞`, msg)
                                                                                if(Date.now() - (Date.parse(`${data}Z`) - 1000 * 60 * 60 * 3) > -60000 * 10) return crossText(`–ò–≤–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å—Å—è —Ä–∞–Ω–µ–µ, —á–µ–º –∑–∞ 10 –º–∏–Ω—É—Ç`, msg)
                                                                                discordData = new Date(Date.parse(`${data}Z`) - 1000 * 60 * 60 * 3)
                                                                                time = msg.content
                                                                                msg.react(checkmark)
                                                                                isActive = false
                                                                                timeCollector.stop()
                                                                            })
                                                
                                                                            timeCollector.on('end', async collected => {
                                                                                timeMsg.edit({components: [DECLINE_BUTTON(true)]})
                                                                                if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                                if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                                                if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
        
                                                                                let eventChannels = message.guild.channels.cache.filter(ch => ch.type == "GUILD_VOICE" &&
                                                                                (message.guild.channels.cache.get(ch.parentId).name.toLowerCase().includes("–∫–∏–Ω–æ–∑–∞–ª")))
                                                                                .sort(function (a, b) {
                                                                                    return a.rawPosition - b.rawPosition;
                                                                                })
                                                
                                                
                                                                                let chanEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è üìΩÔ∏è`).setColor("#2F3136")
                                                                                .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–π—Å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä`)
                                                                                let placeMsg = await message.reply({
                                                                                    embeds: [chanEmbed], 
                                                                                    components: [PLACE_CHANNEL_SELECT_MENU(message, eventChannels), DECLINE_BUTTON()]
                                                                                }) 
                                                                                const placeCollector = placeMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                                                                placeCollector.on('collect', async i => {
                                                                                    console.log(i.member.id, memberID)
                                                                                    if (i.member.id != memberID) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                                                    if(i.customId == "decline_button"){
                                                                                        declined = true
                                                                                        placeCollector.stop()
                                                                                    } else {
                                                                                        place = i.values[0]
                                                                                        placeCollector.stop()
                                                                                    }
                                                                                    placeMsg.edit({components: [PLACE_CHANNEL_SELECT_MENU(message, eventChannels, true), DECLINE_BUTTON(true)]})
                                                                                    i.deferUpdate()
                                                                                })
                                                
                                                                                placeCollector.on('end', async collected => {
                                                                                    if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                                    if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                                                    if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
        
                                                                                    
                                                                                        let rolesEmbed = new Discord.MessageEmbed().setTitle(`üìΩÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è üìΩÔ∏è`).setColor("#2F3136")
                                                                                        .setDescription(`–í–≤–µ–¥–∏—Ç–µ —Å–∞–º–æ–µ –≤–µ—Ä—Ö–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ —ç–º–±–µ–¥–æ–º\n–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –∏–≤–µ–Ω—Ç–µ`)
                                                                                        let rolesMsg = await message.reply({embeds: [rolesEmbed], components: [DECLINE_BUTTON()]}) 
                                                                                        const rolesCollector = message.channel.createMessageCollector({channelFilter, time: 60000, errors: ['time']})
                                                                                        const declineRolesCollector = rolesMsg.createMessageComponentCollector({channelFilter, time: 60000, errors: ['time']})
                                                    
                                                                                        declineRolesCollector.on('collect', async i => {
                                                                                            if (i.member.id != message.member.id) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                                                            declined = true
                                                                                            rolesCollector.stop()
                                                                                            declineRolesCollector.stop()
                                                                                            i.deferUpdate()
                                                                                        })
                                                                                        
                                                                                        rolesCollector.on('collect', async(msg) => {
                                                                                            isActive = true
                                                                                            if(msg.author.id !== message.author.id) return
                                                                                            if(msg.author.bot) return
                                                    
                                                                                            if(msg.content.includes('@everyone') || msg.content.includes('@here')) return crossText(`–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @everyone –∏ @here –≤ –≤–µ—Ä—Ö–Ω–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏`, msg)
                                                                                            roles = msg.content
                                                                                            if(!roles) return crossText (`–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ`, msg)
                                                                                            msg.react(checkmark)
                                                                                            isActive = false
                                                                                            rolesCollector.stop()
                                                                                        })
                                            
                                                                                        rolesCollector.on('end', async collected => {
                                                                                            rolesMsg.edit({components:[DECLINE_BUTTON(true)]})
                                                                                            if(declined) return crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                                            if(collected.map(c => c.content).length == 0) return crossText(`–ù–∏–∫–∞–∫–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, chanMsg)
                                                                                            if(isActive) return crossText(`–ù–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ`, message)
        
                                                                                            let embedCreate = (preview) => {
    
                                                                                                let first_embed = new Discord.MessageEmbed().setColor(noColor()).setTitle(title)
                                                                                                .setDescription(`**–ñ–∞–Ω—Ä:** ${genre}\n**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å${series_amount > 1 ? ` –æ–¥–Ω–æ–π —Å–µ—Ä–∏–∏`: ":"}** ${duration}${series_amount > 1 ? `\n**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π:** ${series_amount}` : ""}\n**–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:** ${year} –≥–æ–¥\n**–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä${series_amount > 1 ? ` –æ–¥–Ω–æ–π —Å–µ—Ä–∏–∏:` : ":"}** ${participation} ${coin}`)
                                                                                                .setImage(image)
                                                                                                if(preview) first_embed.setFooter({text:`–≠—Ç–æ –ø—Ä–µ–≤—å—é –∏–≤–µ–Ω—Ç–∞`})
    
                                                                                                let second_embed = new Discord.MessageEmbed().setColor(noColor()).setTitle(title2)
                                                                                                .setDescription(`**–ñ–∞–Ω—Ä:** ${genre2}\n**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å${series_amount2 > 1 ? ` –æ–¥–Ω–æ–π —Å–µ—Ä–∏–∏`: ":"}** ${duration2}${series_amount2 > 1 ? `\n**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π:** ${series_amount2}` : ""}\n**–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞:** ${year2}\n**–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä${series_amount2 > 1 ? ` –æ–¥–Ω–æ–π —Å–µ—Ä–∏–∏:` : ":"}** ${participation2} ${coin}`)
                                                                                                .setImage(image2)
                                                                                                if(preview) second_embed.setFooter({text:`–≠—Ç–æ –ø—Ä–µ–≤—å—é –∏–≤–µ–Ω—Ç–∞`})

                                                                                                let vote_embed = new Discord.MessageEmbed().setColor(noColor())
                                                                                                .setDescription(`**–ú–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏ –∏ –Ω–∞—á–∞–ª–æ:** <#${place}> ${time} –ø–æ –ú–°–ö\n**–í–µ–¥—É—â–∏–π:** ${message.member}\n\n–ü—Ä–æ–≥–æ–ª–æ—Å—É–π—Ç–µ –∑–∞ –∂–µ–ª–∞–µ–º—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª`)
                                                                                                if(preview) vote_embed.setFooter({text:`–ù–∏–∂–µ –±—É–¥—É—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è –≥–æ–ª—Å–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏`})
                                                                                                return [first_embed, second_embed, vote_embed]
                                                                                            }
                                                
                                                                                            let previewMsg = await message.channel.send({
                                                                                                content: roles, 
                                                                                                embeds: embedCreate(true), 
                                                                                                components: [PUBLISH_DECLINE_BUTTONS()]
                                                                                            })
                                                                                            const declinePublishCollector = previewMsg.createMessageComponentCollector({channelFilter, time: 300000, errors: ['time']})
                                                
                                                                                            declinePublishCollector.on('collect', async i => {
                                                                                                if(i.member.id != message.member.id) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                                                                                                if(i.customId == 'decline_button'){
                                                                                                    declinePublishCollector.stop()
                                                                                                    previewMsg.edit({
                                                                                                        components: [PUBLISH_DECLINE_BUTTONS(true)]
                                                                                                    })
                                                                                                    crossText(`–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É—é`, message)
                                                                                                    i.deferUpdate()
                                                                                                } else if(i.customId == "publish_button") {
                                                                                                    let findChan = message.guild.channels.cache.get(chan)
                                                                                                    findChan.send({content: roles, embeds: embedCreate(false)}).then(msg => {
                                                                                                        msg.react("1Ô∏è‚É£")
                                                                                                        msg.react("2Ô∏è‚É£")
                                                                                                    })
                                                                                                    return i.reply({content: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!"})
                                                                                                    //i.deferUpdate()
                                                                                                }
                                                                                            })
                                                                                        })
                                                                                    })
                                                                                })
                                                                            })
                                                                        })
                                                                    })
                                                                })
                                                            })
                                                        })
                                                    })
                                                })
                                            })
                                        })
                                    })
                                })
                            })
                        })
                    })
                })
            })
    }
}