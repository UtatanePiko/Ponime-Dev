const chalk = require('chalk')

module.exports = {
    name: "film",
    description: "–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥",
    aliases: ["—Ñ–∏–ª—å–º"],
    run: async (bot, message, args) => {

        try{

            const User = require('../../models/user')
            const Discord = require('discord.js')
            const Guild = require('../../models/guild')
            const Giveaway = require('../../models/giveaway')
            const mongoose = require("mongoose")
            const MongoFunc = require('../../functions/MongoFunc') 
            const ms = require('ms')
            const { Embeds, crossText, noPerms, checkmarkText, noColorEmbed } = require('../../functions/Embed') 
            const { noColor, botColorMessage } = require('../../functions/Colours')
            const Util  = require('../../functions/Util')
            const prefix = bot.server.get(message.guild.id).prefix
            const Events = require('../../models/events')
            const { DECLINE_BUTTON, PUBLISH_CHANNEL_SELECTMENU, FILM_SCHEDULE_SELECTMENU } = require('../../functions/Buttons')
            const { ONE_FILM_SCHEDULE, TWO_FILMS_SCHEDULE } = require('../../functions/Film_Schedules')
            const { stringToDateFull, stringToDateTime} = require('../../functions/Util')
            const channelFilter = (m) => m.author.id === message.member.id
            
            let eventRole = message.guild.roles.cache.find(r => r.name.includes('–ö–∏–Ω–æ-—Å—Ç—Ä–∏–º–µ—Ä'))
            if(Util.checkPerm(message.member, "MANAGE_ROLES") && !(eventRole && message.member.roles.cache.has(eventRole.id)) && message.member.id != "329462919676821504") return noPerms(message)

            if(args[0] == "help" || args[0] == "–ø–æ–º–æ—â—å"){
                const embed = new Embeds({
                    message: message,
                    description: `–°–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å–º–∞`,
                    embedTitle: "FILM HELP-MENU",
                    embedColor: noColor(),
                    arguments: `‚óè **\`${prefix}film <create/—Å–æ–∑–¥–∞—Ç—å>\`**`,
                    alternatives: `‚óè **\`${prefix}film\`** | **\`${prefix}—Ñ–∏–ª—å–º\`**`,
                    examples: `‚óè **\`${prefix}film create\`**`,
                    hints: `‚óè **\`<>\`** - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è`
                })
    
                return embed.help()
            }



            if(!args[0]) return crossText(`–ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ **\`${message.content.split(" ")[0].toLowerCase()} help\`**, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã`, message)
            if((args[0]).toLowerCase() == "create" || (args[0]).toLowerCase() == "—Å–æ–∑–¥–∞—Ç—å"){

                let selectScheduleEmbed = new Discord.MessageEmbed().setTitle(`üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ üõ†Ô∏è`).setColor("#2F3136")
                .setDescription(`–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥(-–æ–≤)`)
                let initMessage = await message.reply({
                    embeds: [selectScheduleEmbed],
                    components: [FILM_SCHEDULE_SELECTMENU(), DECLINE_BUTTON()]
                })
                const selectScheduleCollector = initMessage.createMessageComponentCollector({channelFilter, time: 60000, max: 1, errors: ['time']})

                selectScheduleCollector.on('collect', async i => {
                    if (i.member.id != message.member.id) return await i.reply({ content: `–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–ª—è –≤–∞—Å`, ephemeral: true });
                    if(i.customId == 'decline_button'){
                        console.log('declined')
                    } else if(i.values[0] == 'one_film'){
                        await ONE_FILM_SCHEDULE(message, message.member.id)
                    } else {
                        return i.reply({content: "–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è", ephemeral: true})
                        await TWO_FILMS_SCHEDULE(message, message.member.id)
                    }
                    initMessage.edit({
                        components: [FILM_SCHEDULE_SELECTMENU(true), DECLINE_BUTTON(true)]
                    })
                    i.deferUpdate()
                })
            }
        }catch(err){
            console.error(chalk.redBright(err.stack))
            console.error(chalk.yellowBright('–ü—Ä–æ–¥–æ–ª–∂–∞—é —Ä–∞–±–æ—Ç—É –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏...'))
        }
    }
}